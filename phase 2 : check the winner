import tkinter as tk
from tkinter import messagebox

# Create the main window
root = tk.Tk()
root.title("Tic-Tac-Toe")

# Initialize game variables
current_player = "X"
board = [" " for _ in range(9)]
count = 0

# Create a function to handle button clicks
def button_click(idx):
    global current_player, count

    # Check if the cell is empty and it's the player's turn
    if board[idx] == " " and not check_winner():
        board[idx] = current_player
        buttons[idx].config(text=current_player)
        current_player = "O" if current_player == "X" else "X"
        count += 1

        if count >= 9:
            show_tie()
        else:
            show_turn()

# Create a function to check for a winner
def check_winner():
    # Define the winning combinations
    winning_combinations = [(0, 1, 2), (3, 4, 5), (6, 7, 8),
                            (0, 3, 6), (1, 4, 7), (2, 5, 8),
                            (0, 4, 8), (2, 4, 6)]

    for combo in winning_combinations:
        if board[combo[0]] == board[combo[1]] == board[combo[2]] != " ":
            show_winner(board[combo[0]])
            return True

    return False

# Create a function to show the winner
def show_winner(winner):
    messagebox.showinfo("Tic-Tac-Toe", f"Player {winner} wins!")
    root.quit()

# Create a function to show a tie
def show_tie():
    messagebox.showinfo("Tic-Tac-Toe", "It's a tie!")
    root.quit()

# Create a function to show the current player's turn
def show_turn():
    messagebox.showinfo("Tic-Tac-Toe", f"Player {current_player}'s turn")

# Create the game board buttons
buttons = []
for i in range(9):
    button = tk.Button(root, text=" ", font=("normal", 20), width=5, height=2,
                       command=lambda idx=i: button_click(idx))
    button.grid(row=i // 3, column=i % 3)
    buttons.append(button)

# Start the game by showing Player X's turn
show_turn()

# Start the game loop
root.mainloop()
